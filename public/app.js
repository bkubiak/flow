// Generated by CoffeeScript 1.4.0
(function() {
  var App, Klass;

  App = {
    views: {},
    models: {},
    collections: {},
    routers: {}
  };

  Klass = {
    views: {},
    models: {},
    collections: {},
    routers: {}
  };

  App.templates = function(name) {
    return jade.templates[name];
  };

  App.initModels = function() {
    return this.models.menu = new Klass.models.Menu({});
  };

  App.init = function() {
    this.initModels();
    this.views.main = new Klass.views.Main({
      el: 'body',
      menu: this.models.menu
    });
    this.routers.main = new Klass.routers.Main(this.views, this.models, this.collections);
    return Backbone.history.start({
      pushState: true
    });
  };

  $(function() {
    window['App'] = App;
    return App.init();
  });

  Klass.models.Menu = Backbone.Model.extend({
    nav: {
      'dashboard': {
        label: 'Dashboard'
      },
      'section1': {
        label: 'Section 1'
      },
      'section2': {
        label: 'Section 2'
      },
      'section3': {
        label: 'Section 3'
      }
    }
  });

  Klass.routers.Main = Backbone.Router.extend({
    routes: {
      "dashboard": "dashboard",
      "section1": "section1",
      "section2": "section2",
      "section3": "section3",
      "*notFound": "e404"
    },
    initialize: function(views, models, collections) {
      this.views = views;
      this.models = models;
      this.collections = collections;
    },
    e404: function(path) {
      return this.navigate('/dashboard', {
        trigger: true
      });
    },
    dashboard: function() {
      this.setTitle('Dashboard');
      this.views.main.hideAllSections();
      return this.views.main.showSection('dashboard');
    },
    section1: function() {
      this.setTitle('Section 1');
      this.views.main.hideAllSections();
      return this.views.main.showSection('section1');
    },
    section2: function() {
      this.setTitle('Section 2');
      this.views.main.hideAllSections();
      return this.views.main.showSection('section2');
    },
    section3: function() {
      this.setTitle('Section 3');
      this.views.main.hideAllSections();
      return this.views.main.showSection('section3');
    }
  });

  Klass.views.Dashboard = Backbone.View.extend({
    templateName: 'dashboard',
    initialize: function(opts) {
      return this.render();
    }
  });

  Klass.views.Main = Backbone.View.extend({
    templateName: 'main',
    events: {
      'click a': 'navigate'
    },
    initialize: function(opts) {
      this.menu = opts.menu;
      this.views = {};
      return this.render();
    },
    render: function() {
      Backbone.View.prototype.render.call(this);
      this.views.top = new Klass.views.Menu({
        el: this.$('#menu'),
        model: this.menu
      });
      return this.renderSections();
    },
    renderSections: function() {
      this.views.dashboard = new Klass.views.Dashboard({
        el: this.$('#content')
      });
      this.views.section1 = new Klass.views.Section1({
        el: this.$('#content')
      });
      this.views.section2 = new Klass.views.Section2({
        el: this.$('#content')
      });
      return this.views.section3 = new Klass.views.Section3({
        el: this.$('#content')
      });
    },
    hideAllSections: function() {
      return this.$('#content > .section').hide();
    },
    showSection: function(section) {
      return this.views[section].show();
    }
  });

  Klass.views.Menu = Backbone.View.extend({
    templateName: 'menu',
    initialize: function(opts) {
      return this.render();
    },
    templateHash: function() {
      return {
        menu: this.model.nav
      };
    }
  });

  Klass.views.Section1 = Backbone.View.extend({
    templateName: 'section1',
    initialize: function(opts) {
      return this.render();
    }
  });

  Klass.views.Section2 = Backbone.View.extend({
    templateName: 'section2',
    initialize: function(opts) {
      return this.render();
    }
  });

  Klass.views.Section3 = Backbone.View.extend({
    templateName: 'section3',
    initialize: function(opts) {
      return this.render();
    }
  });

}).call(this);
